package ca.viu.csci331.instruction.model;

import java.util.ArrayList;

public class OfferredCourses {
	private ArrayList<Course> courses = new ArrayList<Course>();
	private ArrayList<Course> removed = new ArrayList<Course>();
	private int capacity;
	private int numberOfCourses = 0;
	
	public OfferredCourses(int n) {
		courses = new ArrayList<Course>(n);
		this.capacity  = n;
		this.numberOfCourses = 0;
	}
	public OfferredCourses() {
		courses = new ArrayList<Course>();

	}
	public void offer(Course offered) {
		if(numberOfCourses < capacity) {
			courses.add(offered);
			numberOfCourses++;
		}else {
			System.out.println("unable to add capacity reached");
		}
	}
	public void cancel(Course canCourse) {
		if(numberOfCourses > 0) {
			courses.remove(canCourse);
			removed.add(canCourse);
			numberOfCourses--;
		}else {
			System.out.println("unable to remove");
		}
	}
	public void show() {
		for(int i = 0; i < courses.size(); i++) {
			courses.get(i).show();
		}
	}
	public Course searchByName(String name) {
		for(int i = 0; i < courses.size(); i++) {
			if(courses.get(i).getCourseName().equals(name)) {
				return courses.get(i); 
			}
		}
		return null;
	}
	public Course searchByNumber(String num) {
		for(int i = 0; i < courses.size(); i++) {
			if(courses.get(i).getCourseNum().equals(num)) {
				return courses.get(i); 
			}
		}
		return null;
	}
	public boolean contains(Course maybe){
		if(courses.contains(maybe)) return true;		
		else return false;
	}

}
